# Fetch data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,] %>%
mutate(date = as.Date(data), # convert to date format
across(VALE3:WHMT3, as.numeric)) %>%  # convert to numeric format
select(date, everything(), -data) %>% # select date and tickers
gather("Ticker", "AdjClose", -date) %>% # adjust to panel data
na.omit() %>%
group_by(Ticker) %>% # calculate return for each ticker
mutate(Ret = log(AdjClose/ lag(AdjClose))) %>%  # compute log return
ungroup() %>% # ungroup tickers
na.omit() %>% # clean na values
select(date, Ticker, Ret) %>% # selecting necessary columns
spread(key = "Ticker", value = "Ret", fill = 0) # transforming data
Ret
Ret$VALE3
# Fetch data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,] %>%
mutate(date = as.Date(data), # convert to date format
across(VALE3:WHMT3, as.numeric)) %>%  # convert to numeric format
select(date, everything(), -data) %>% # select date and tickers
gather("Ticker", "AdjClose", -date) %>% # adjust to panel data
na.omit() %>%
group_by(Ticker) %>% # calculate return for each ticker
mutate(Ret = log(AdjClose/ lag(AdjClose))) %>%  # compute log return
ungroup() %>% # ungroup tickers
#na.omit() %>% # clean na values
select(date, Ticker, Ret) %>% # selecting necessary columns
spread(key = "Ticker", value = "Ret", fill = 0) # transforming data
Ret
# Fetch data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,] %>%
mutate(date = as.Date(data), # convert to date format
across(VALE3:WHMT3, as.numeric)) %>%  # convert to numeric format
select(date, everything(), -data) %>% # select date and tickers
gather("Ticker", "AdjClose", -date) %>% # adjust to panel data
na.omit() %>%
group_by(Ticker) %>% # calculate return for each ticker
mutate(Ret = log(AdjClose/ dplyr::lag(AdjClose))) %>%  # compute log return
ungroup() %>% # ungroup tickers
#na.omit() %>% # clean na values
select(date, Ticker, Ret) %>% # selecting necessary columns
spread(key = "Ticker", value = "Ret", fill = 0) # transforming data
Ret
# Fetch data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,] %>%
mutate(date = as.Date(data), # convert to date format
across(VALE3:WHMT3, as.numeric)) %>%  # convert to numeric format
select(date, everything(), -data) %>% # select date and tickers
gather("Ticker", "AdjClose", -date, na.rm=TRUE) %>% # adjust to panel data
na.omit() %>%
group_by(Ticker) %>% # calculate return for each ticker
mutate(Ret = log(AdjClose/ dplyr::lag(AdjClose))) %>%  # compute log return
ungroup() %>% # ungroup tickers
select(date, Ticker, Ret) %>% # selecting necessary columns
spread(key = "Ticker", value = "Ret", fill = 0) # transforming data
# Fetch data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,] %>%
mutate(date = as.Date(data), # convert to date format
across(VALE3:WHMT3, as.numeric)) %>%  # convert to numeric format
select(date, everything(), -data) %>% # select date and tickers
gather("Ticker", "AdjClose", -date, na.rm=TRUE) %>% # adjust to panel data
#na.omit() %>%
group_by(Ticker) %>% # calculate return for each ticker
mutate(Ret = log(AdjClose/ dplyr::lag(AdjClose))) %>%  # compute log return
ungroup() %>% # ungroup tickers
select(date, Ticker, Ret) %>% # selecting necessary columns
spread(key = "Ticker", value = "Ret", fill = 0) # transforming data
Ret
# Fetch data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,] %>%
mutate(date = as.Date(data), # convert to date format
across(VALE3:WHMT3, as.numeric)) %>%  # convert to numeric format
select(date, everything(), -data) %>% # select date and tickers
gather("Ticker", "AdjClose", -date, na.rm = TRUE) %>% # adjust to panel data
group_by(Ticker) %>% # calculate return for each ticker
mutate(Ret = log(AdjClose/ dplyr::lag(AdjClose))) %>%  # compute log return
ungroup() %>% # ungroup tickers
select(date, Ticker, Ret) %>% # selecting necessary columns
spread(key = "Ticker", value = "Ret", fill = 0) # transforming data
Ret
# Choosing stocks on Ibovespa per year
MarketComposition <- read_excel("data_directory/MarketComposition.xlsx") %>%
mutate(date = as.Date(Data), # convert to date format
m = month(date, label = TRUE)) %>% # convert to numeric format
filter(m == "dez") %>% # update factors
select(date, everything(),-c(Data, m)) %>% # select date, month and tickers
gather("Ticker", "Composition", -date, na.rm=TRUE) %>% # adjust to panel data
group_by(date) %>% # Select tickers by last date of the month
reframe(Tickers = Ticker)
MarketComposition <- read_excel("data_directory/MarketComposition.xlsx") %>%
mutate(date = as.Date(Data), # convert to date format
m = month(date, label = TRUE))
MarketComposition$m
# Choosing stocks on Ibovespa per year
MarketComposition <- read_excel("data_directory/MarketComposition.xlsx") %>%
mutate(date = as.Date(Data), # convert to date format
m = month(date, label = TRUE)) %>% # convert to numeric format
select(date, m, everything()) %>%
filter(m == "dez") %>% # update factors
select(date, everything(),-c(Data, m)) %>% # select date, month and tickers
gather("Ticker", "Composition", -date, na.rm=TRUE) %>% # adjust to panel data
group_by(date) %>% # Select tickers by last date of the month
reframe(Tickers = Ticker)
MarketComposition$...162
# Choosing stocks on Ibovespa per year
MarketComposition <- read_excel("data_directory/MarketComposition.xlsx") %>%
mutate(date = as.Date(Data), # convert to date format
m = month(date, label = TRUE)) %>% # convert to numeric format
filter(m == "dez") %>% # update factors
select(date, everything(),-c(Data, m)) %>% # select date, month and tickers
gather("Ticker", "Composition", -date, na.rm=TRUE) %>% # adjust to panel data
group_by(date) %>% # Select tickers by last date of the month
reframe(Tickers = Ticker)
MarketComposition <- read_excel("data_directory/MarketComposition.xlsx") %>%
mutate(date = as.Date(Data), # convert to date format
m = month(date, label = TRUE))
MarketComposition$...162
# Choosing stocks on Ibovespa per year
MarketComposition <- read_excel("data_directory/MarketComposition.xlsx") %>%
mutate(date = as.Date(Data), # convert to date format
m = month(date, label = TRUE)) %>% # convert to numeric format
filter(m == "dez") %>% # update factors
select(date, everything(),-c(Data, m)) %>% # select date, month and tickers
gather("Ticker", "Composition", -date, na.rm=TRUE) %>% # adjust to panel data
group_by(date) %>% # Select tickers by last date of the month
reframe(Tickers = Ticker)
# Load required packages
library(tidyverse)     # Data manipulation and visualization
# Choosing stocks on Ibovespa per year
MarketComposition <- read_excel("data_directory/MarketComposition.xlsx") %>%
mutate(date = as.Date(Data), # convert to date format
m = month(date, label = TRUE)) %>% # convert to numeric format
dplyr::filter(m == "dez") %>% # update factors
select(date, everything(),-c(Data, m)) %>% # select date, month and tickers
gather("Ticker", "Composition", -date, na.rm=TRUE) %>% # adjust to panel data
group_by(date) %>% # Select tickers by last date of the month
reframe(Tickers = Ticker)
MarketComposition
Update <- MarketComposition %>%
select(date) %>%
unique() %>% # avoid repetition
deframe() # create vector
Update
Symbols <- map(Update, .f = function(x){ # list of vectors with Ibov tickers per year
MarketComposition %>%
filter(date == x) %>% # choose stocks presented on Ibov
select(Tickers) %>%
unique() %>% # avoid repetition
deframe() # create vector
})
MarketComposition %>%
dplyr::filter(date == x) %>% # choose stocks presented on Ibov
select(Tickers) %>%
unique() %>% # avoid repetition
deframe() # create vector
Symbols <- map(Update, .f = function(x){ # list of vectors with Ibov tickers per year
MarketComposition %>%
dplyr::filter(date == x) %>% # choose stocks presented on Ibov
select(Tickers) %>%
unique() %>% # avoid repetition
deframe() # create vector
})
names(Symbols) <- Update
Symbols
x = "1997-12-31"
x
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
filter(date > x,
date <= x + 365)
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > x,
date <= x + 365)
# Fetch data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,] %>%
mutate(date = as.Date(data), # convert to date format
across(VALE3:WHMT3, as.numeric)) %>%  # convert to numeric format
rename("BRDT" = "BRDT-old") %>%
select(date, everything(), -data) %>% # select date and tickers
gather("Ticker", "AdjClose", -date, na.rm = TRUE) %>% # adjust to panel data
group_by(Ticker) %>% # calculate return for each ticker
mutate(Ret = log(AdjClose/ dplyr::lag(AdjClose))) %>%  # compute log return
ungroup() %>% # stop grouping tickers
select(date, Ticker, Ret) %>% # selecting necessary columns
spread(key = "Ticker", value = "Ret", fill = 0) # transforming data
# Fetch data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,] %>%
mutate(date = as.Date(data), # convert to date format
across(VALE3:WHMT3, as.numeric)) %>%  # convert to numeric format
rename("BRDT" = `BRDT-old`) %>%
select(date, everything(), -data) %>% # select date and tickers
gather("Ticker", "AdjClose", -date, na.rm = TRUE) %>% # adjust to panel data
group_by(Ticker) %>% # calculate return for each ticker
mutate(Ret = log(AdjClose/ dplyr::lag(AdjClose))) %>%  # compute log return
ungroup() %>% # stop grouping tickers
select(date, Ticker, Ret) %>% # selecting necessary columns
spread(key = "Ticker", value = "Ret", fill = 0) # transforming data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,]
# Fetch data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,] %>%
mutate(date = as.Date(data), # convert to date format
across(VALE3:WHMT3, as.numeric)) %>%  # convert to numeric format
select(date, everything(), -data) %>% # select date and tickers
gather("Ticker", "AdjClose", -date, na.rm = TRUE) %>% # adjust to panel data
group_by(Ticker) %>% # calculate return for each ticker
mutate(Ret = log(AdjClose/ dplyr::lag(AdjClose))) %>%  # compute log return
ungroup() %>% # stop grouping tickers
select(date, Ticker, Ret) %>% # selecting necessary columns
spread(key = "Ticker", value = "Ret", fill = 0) # transforming data
Ret
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > x,
date <= x + 365)
# Defining stocks per size in Small and Big
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > as.Date(x),
date <= as.Date(x) + 365)
MarketComposition
# Filtering stocks on Ibovespa
Ret_List <- map(Update, .f = function(x){
# Defining stocks per size in Small and Big
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > as.Date(x),
date <= as.Date(x) + 365)
})
# Fetch data
# OBSERVATION: CSIP6 was removed from data due to impossibility of found data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,] %>%
mutate(date = as.Date(data), # convert to date format
across(VALE3:WHMT3, as.numeric)) %>%  # convert to numeric format
select(date, everything(), -data) %>% # select date and tickers
gather("Ticker", "AdjClose", -date, na.rm = TRUE) %>% # adjust to panel data
group_by(Ticker) %>% # calculate return for each ticker
mutate(Ret = log(AdjClose/ dplyr::lag(AdjClose))) %>%  # compute log return
ungroup() %>% # stop grouping tickers
select(date, Ticker, Ret) %>% # selecting necessary columns
spread(key = "Ticker", value = "Ret", fill = 0) # transforming data
Ret
# Defining stocks per size in Small and Big
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > as.Date(x),
date <= as.Date(x) + 365)
# Filtering stocks on Ibovespa
Ret_List <- map(Update, .f = function(x){
# Defining stocks per size in Small and Big
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > as.Date(x),
date <= as.Date(x) + 365)
})
# Choosing stocks on Ibovespa per year
MarketComposition <- read_excel("data_directory/MarketComposition.xlsx") %>%
mutate(date = as.Date(Data), # convert to date format
m = month(date, label = TRUE)) %>% # convert to numeric format
dplyr::filter(m == "dez") %>% # update factors
select(date, everything(),-c(Data, m)) %>% # select date, month and tickers
gather("Ticker", "Composition", -date, na.rm=TRUE) %>% # adjust to panel data
group_by(date) %>% # Select tickers by last date of the month
reframe(Tickers = Ticker)
MarketComposition
Update <- MarketComposition %>%
select(date) %>%
unique() %>% # avoid repetition
deframe() # create vector
Update
Symbols <- map(Update, .f = function(x){ # list of vectors with Ibov tickers per year
MarketComposition %>%
dplyr::filter(date == x) %>% # choose stocks presented on Ibov
select(Tickers) %>%
unique() %>% # avoid repetition
deframe() # create vector
})
names(Symbols) <- Update
Symbols
# Filtering stocks on Ibovespa
Ret_List <- map(Update, .f = function(x){
# Defining stocks per size in Small and Big
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > as.Date(x),
date <= as.Date(x) + 365)
})
# Fetch data
# OBSERVATION: CSIP6 was removed from data due to impossibility of found data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,] %>%
mutate(date = as.Date(data), # convert to date format
across(VALE3:WHMT3, as.numeric)) %>%  # convert to numeric format
select(date, everything(), -data) %>% # select date and tickers
gather("Ticker", "AdjClose", -date, na.rm = TRUE) %>% # adjust to panel data
group_by(Ticker) %>% # calculate return for each ticker
mutate(Ret = log(AdjClose/ dplyr::lag(AdjClose))) %>%  # compute log return
ungroup() %>% # stop grouping tickers
select(date, Ticker, Ret) %>% # selecting necessary columns
spread(key = "Ticker", value = "Ret", fill = 0) # transforming data
Ret
# Choosing stocks on Ibovespa per year
MarketComposition <- read_excel("data_directory/MarketComposition.xlsx") %>%
mutate(date = as.Date(Data), # convert to date format
m = month(date, label = TRUE)) %>% # convert to numeric format
dplyr::filter(m == "dez") %>% # update factors
select(date, everything(),-c(Data, m)) %>% # select date, month and tickers
gather("Ticker", "Composition", -date, na.rm=TRUE) %>% # adjust to panel data
group_by(date) %>% # Select tickers by last date of the month
reframe(Tickers = Ticker)
MarketComposition
Update <- MarketComposition %>%
select(date) %>%
unique() %>% # avoid repetition
deframe() # create vector
Update
Symbols <- map(Update, .f = function(x){ # list of vectors with Ibov tickers per year
MarketComposition %>%
dplyr::filter(date == x) %>% # choose stocks presented on Ibov
select(Tickers) %>%
unique() %>% # avoid repetition
deframe() # create vector
})
names(Symbols) <- Update
Symbols
# Filtering stocks on Ibovespa
Ret_List <- map(Update, .f = function(x){
# Defining stocks per size in Small and Big
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > as.Date(x),
date <= as.Date(x) + 365)
})
# Fetch data
# OBSERVATION: CSIP6 was removed from data due to impossibility of found data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,] %>%
mutate(date = as.Date(data), # convert to date format
across(VALE3:WHMT3, as.numeric)) %>%  # convert to numeric format
select(date, everything(), -data) %>% # select date and tickers
gather("Ticker", "AdjClose", -date, na.rm = TRUE) %>% # adjust to panel data
group_by(Ticker) %>% # calculate return for each ticker
mutate(Ret = log(AdjClose/ dplyr::lag(AdjClose))) %>%  # compute log return
ungroup() %>% # stop grouping tickers
select(date, Ticker, Ret) %>% # selecting necessary columns
spread(key = "Ticker", value = "Ret", fill = 0) # transforming data
Ret
# Choosing stocks on Ibovespa per year
MarketComposition <- read_excel("data_directory/MarketComposition.xlsx") %>%
mutate(date = as.Date(Data), # convert to date format
m = month(date, label = TRUE)) %>% # convert to numeric format
dplyr::filter(m == "dez") %>% # update factors
select(date, everything(),-c(Data, m)) %>% # select date, month and tickers
gather("Ticker", "Composition", -date, na.rm=TRUE) %>% # adjust to panel data
group_by(date) %>% # Select tickers by last date of the month
reframe(Tickers = Ticker)
MarketComposition
Update <- MarketComposition %>%
select(date) %>%
unique() %>% # avoid repetition
deframe() # create vector
Update
Symbols <- map(Update, .f = function(x){ # list of vectors with Ibov tickers per year
MarketComposition %>%
dplyr::filter(date == x) %>% # choose stocks presented on Ibov
select(Tickers) %>%
unique() %>% # avoid repetition
deframe() # create vector
})
names(Symbols) <- Update
Symbols
# Filtering stocks on Ibovespa
Ret_List <- map(Update, .f = function(x){
# Defining stocks per size in Small and Big
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > as.Date(x),
date <= as.Date(x) + 365)
})
names(Ret_List) <- Update
Ret_List
# Filtering stocks on Ibovespa
Ret_List <- map(Update, .f = function(x){
# Defining stocks per size in Small and Big
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > as.Date(x),
date <= as.Date(x) + 365)
}) %>%
bind_rows()
names(Ret_List) <- Update
Ret_List
# Filtering stocks on Ibovespa
Ret_List <- map(Update, .f = function(x){
# Defining stocks per size in Small and Big
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > as.Date(x),
date <= as.Date(x) + 365)
}) %>%
bind_rows()
Ret_List
sum(is.na(Ret_List))
# Filtering stocks on Ibovespa
Ret_List <- map(Update, .f = function(x){
# Defining stocks per size in Small and Big
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > as.Date(x),
date <= as.Date(x) + 365)
})
names(Ret_List) <- Update
Ret_List
# setting R project environment
my_dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(my_dir)
# cleaning variables and graphs
rm(list=ls())
graphics.off()
# Load required packages
library(tidyverse)     # Data manipulation and visualization
library(tidyquant)     # Financial data analysis
library(readxl)        # Read excel files
library(rugarch)       # Univariate GARCH modeling
library(fGarch)        # Multivariate GARCH modeling
library(copula)        # Copula modeling
library(Rsolnp)        # Nonlinear optimization
library(fPortfolio)    # Portfolio optimization
library(PerformanceAnalytics) # Performance metrics
library(xts)           # Time series object
library(timetk)        # Time series object
library(xtable)        # Create LaTex tables
library(ggplot2)       # Produce graph
library("ROI")         # Optimization
library("ROI.plugin.glpk") # Optimization
library("ROI.plugin.quadprog") # Optimization
library("ROI.plugin.alabama") # Optimization
# Fetch data
# OBSERVATION: CSIP6 was removed from data due to impossibility of found data
Ret <- read_excel("data_directory/StockPrice.xlsx")[-1,] %>%
mutate(date = as.Date(data), # convert to date format
across(VALE3:WHMT3, as.numeric)) %>%  # convert to numeric format
select(date, everything(), -data) %>% # select date and tickers
gather("Ticker", "AdjClose", -date, na.rm = TRUE) %>% # adjust to panel data
group_by(Ticker) %>% # calculate return for each ticker
mutate(Ret = log(AdjClose/ dplyr::lag(AdjClose))) %>%  # compute log return
ungroup() %>% # stop grouping tickers
select(date, Ticker, Ret) %>% # selecting necessary columns
spread(key = "Ticker", value = "Ret", fill = 0) # transforming data
Ret
# Choosing stocks on Ibovespa per year
MarketComposition <- read_excel("data_directory/MarketComposition.xlsx") %>%
mutate(date = as.Date(Data), # convert to date format
m = month(date, label = TRUE)) %>% # convert to numeric format
dplyr::filter(m == "dez") %>% # update factors
select(date, everything(),-c(Data, m)) %>% # select date, month and tickers
gather("Ticker", "Composition", -date, na.rm=TRUE) %>% # adjust to panel data
group_by(date) %>% # Select tickers by last date of the month
reframe(Tickers = Ticker)
MarketComposition
Update <- MarketComposition %>%
select(date) %>%
unique() %>% # avoid repetition
deframe() # create vector
Update
Symbols <- map(Update, .f = function(x){ # list of vectors with Ibov tickers per year
MarketComposition %>%
dplyr::filter(date == x) %>% # choose stocks presented on Ibov
select(Tickers) %>%
unique() %>% # avoid repetition
deframe() # create vector
})
names(Symbols) <- Update
Symbols
# Filtering stocks on Ibovespa
Ret_inSample <- map(Update, .f = function(x){
# Defining stocks per size in Small and Big
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > as.Date(x),
date <= as.Date(x) + 365)
})
names(Ret_inSample) <- Update
Ret_inSample
# Filtering stocks on Ibovespa
Ret_inSample <- map(Update, .f = function(x){
# Defining stocks per size in Small and Big
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > as.Date(x) - 365,
date <= as.Date(x))
})
names(Ret_inSample) <- Update
Ret_inSample
Ret_inSample$`1997-12-31`
Ret_outofSample <- map(Update, .f = function(x){
# Defining stocks per size in Small and Big
Ret %>%
select(date,  Symbols[[paste(x)]]) %>% # filter Ibov stocks
dplyr::filter(date > as.Date(x),
date <= as.Date(x) + 365)
})
Ret_outofSample
Ret_inSample
Ret_outofSample[[23]]
Ret_outofSample[24]
Ret_outofSample[25]
Ret_inSample[25]
names(Ret_outofSample) <- Update + 365
Ret_outofSample
Ret_outofSample$`2022-12-31`
Ret_inSample$`2021-12-31`
Ret_inSample
Ret_inSample$`1997-12-31`
